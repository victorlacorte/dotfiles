path_append() {
  local flags=$1
  local path=$2

  case ":$PATH:" in
  *:$path:*) ;;

  *)
    if [ "$flags" "$path" ]; then
      PATH="$path:$PATH"
    fi
    ;;
  esac
}

VOLTA_HOME="$HOME/.volta"
PNPM_HOME="$HOME/Library/pnpm"
LDFLAGS="-L/opt/homebrew/opt/openssl@3/lib"
CPPFLAGS="-I/opt/homebrew/opt/openssl@3/include"

path_append -d $HOME/.cargo/bin
path_append -d $HOME/.poetry/bin
path_append -d $HOME/bin
path_append -d $HOME/go/bin
path_append -d $VOLTA_HOME/bin
path_append -d '/Applications/Visual Studio Code.app/Contents/Resources/app/bin'
path_append -d /Library/Frameworks/Python.framework/Versions/3.10/bin
path_append -d /opt/homebrew/bin
path_append -d /opt/homebrew/opt/libpq/bin

# Either this is necessary or 'ls -G'
export CLICOLOR=1 # the 'export' is required here

# Set gpg-agent for SSH authentication
unset SSH_AGENT_PID

if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
  SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi

GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null

# TODO almost sure zsh does not load the .profile like bash does. Instead,
# there is .zprofile
# if [ -n "$ZSH_VERSION" ] && [ -f "$HOME/.zshrc" ]; then
# 	. "$HOME/.zshrc"
# fi

# TODO Currently, it is not possible to install older Node versions with PNPM since
# it will attempt to resolve an incorrect URL. For example:
#
# https://nodejs.org/download/release/v14.17.1/node-v14.17.1-darwin-arm64.tar.gz
#
# while the correct one would be:
#
# https://nodejs.org/dist/v14.17.1/node-v14.17.1-darwin-x64.tar.gz
#
# if [ -d "$PNPM_HOME" ]; then
#     PATH="$PNPM_HOME:$PATH"
# fi

if [ -n "$BASH_VERSION" ] && [ -f "$HOME/.bashrc" ]; then
  . "$HOME/.bashrc"
fi
